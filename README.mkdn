[![Build Status](https://travis-ci.org/reneeb/Data-Validate-WithYAML-Plugin-NoSpam.svg?branch=master)](https://travis-ci.org/reneeb/Data-Validate-WithYAML-Plugin-NoSpam)
[![Kwalitee status](http://cpants.cpanauthors.org/dist/Data-Validate-WithYAML-Plugin-NoSpam.png)](http://cpants.charsbar.org/dist/overview/Data-Validate-WithYAML-Plugin-NoSpam)
[![GitHub issues](https://img.shields.io/github/issues/reneeb/Data-Validate-WithYAML-Plugin-NoSpam.svg)](https://github.com/reneeb/Data-Validate-WithYAML-Plugin-NoSpam/issues)

# NAME

Data::Validate::WithYAML::Plugin::NoSpam - Plugin to check that a given text is no spam.

# VERSION

version 0.04

# SYNOPSIS

The check is done with heuristics. It checks that there are no
&lt;a href="..."> or \[url=""\] tags in the text...

    use Data::Validate::WithYAML::Plugin::NoSpam;

    my $foo = Data::Validate::WithYAML::Plugin::NoSpam->check(
       'This is a <a href="anything">Spam-Link</a>',
    );
    ...
    
    # use the plugin via Data::Validate::WithYAML
    
    use Data::Validate::WithYAML;
    
    my $text      = 'This is a <a href="anything">Spam-Link</a>';
    my $validator = Data::Validate::WithYAML->new( 'test.yml' );
    print "yes" if $validator->check( 'textfield', $text );

test.yml

    ---
    step1:
        textfield:
            plugin: NoSpam
            type: required

# SUBROUTINES

## check



# Development

The distribution is contained in a Git repository, so simply clone the
repository

```
$ git clone http://github.com/reneeb/Data-Validate-WithYAML-Plugin-NoSpam.git
```

and change into the newly-created directory.

```
$ cd Data-Validate-WithYAML-Plugin-NoSpam
```

The project uses [`Dist::Zilla`](https://metacpan.org/pod/Dist::Zilla) to
build the distribution, hence this will need to be installed before
continuing:

```
$ cpanm Dist::Zilla
```

To install the required prequisite packages, run the following set of
commands:

```
$ dzil authordeps --missing | cpanm
$ dzil listdeps --author --missing | cpanm
```

The distribution can be tested like so:

```
$ dzil test
```

To run the full set of tests (including author and release-process tests),
add the `--author` and `--release` options:

```
$ dzil test --author --release
```

# AUTHOR

Renee Baecker <module@renee-baecker.de>

# COPYRIGHT AND LICENSE

This software is Copyright (c) 2012 by Renee Baecker.

This is free software, licensed under:

    The Artistic License 2.0 (GPL Compatible)
